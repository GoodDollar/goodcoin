require("babel-register")({ignore: /node_modules\/(?!zeppelin-solidity)/});
require("babel-polyfill");
let Secrets = require("./secrets.json");


const HDWalletProvider = require("truffle-hdwallet-provider");

const mnemonic = Secrets.ethereum.ropsten.owner.MNEMONIC 
const infura_api = Secrets.ethereum.infura.api_key

module.exports = {
  // See <http://truffleframework.com/docs/advanced/configuration>
  // to customize your Truffle configuration!

  networks: {
    development: { 
      host: "127.0.0.1",
      port: 8545, 
      network_id: "*", 
      from: '0x9b36dEa68d42668Bed85c91b990BD306a18310C6' 

    },
      
    test: {
      host: "127.0.0.1",
      port: 8545, // my "ganache " runs on 8545 - configurable
      network_id: "*", // my "ganache " runs with 6000 network_id - configurable
      from: '0x9b36dEa68d42668Bed85c91b990BD306a18310C6' // should be equal to first address in ganache UI list - address[0]
    },
   
    ropsteninfura: {
      provider: function() {
        return new HDWalletProvider(mnemonic, "https://ropsten.infura.io/" + infura_api,0) // First address from the addresses generated by the nemeonim will be used as the deployed contracts owner.
      },
      network_id: 3,
      gas:4700000,
      gasPrice:10000000
    }
  },
  solc: {
    optimizer: {
      enabled: true,
      runs: 200
    }
  }

};
